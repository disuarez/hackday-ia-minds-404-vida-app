body {
    font-family: 'Inter', sans-serif;
    background-color: #f8fafc;
}

.hero-bg {
    background-image: linear-gradient(to right, rgba(0, 59, 111, 0.8), rgba(0, 102, 179, 0.8)), url('https://placehold.co/1920x1080/e2e8f0/334155?text=Familia+Feliz');
    background-size: cover;
    background-position: center;
}

/* Transiciones suaves para las tarjetas de p칩lizas */
.policy-card {
    transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1), box-shadow 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
}

/* Efecto de zoom al pasar el mouse (hover) */
.policy-card:hover {
    transform: scale(1.05);
    z-index: 10;
}

/* Estilo para resaltar la p칩liza seleccionada por la IA */
.highlight-policy {
    box-shadow: 0 0 25px 8px rgba(59, 130, 246, 0.5);
    border-color: #3b82f6;
}

/* Clase para el efecto de zoom de la IA */
.zoomed-in {
    transform: scale(1.08);
    /* Aumentamos un poco m치s el zoom para diferenciarlo del hover */
    z-index: 20;
}

.ai-bubble {
    animation: float 3s ease-in-out infinite;
}

@keyframes float {
    0% {
        transform: translateY(0px);
    }

    50% {
        transform: translateY(-10px);
    }

    100% {
        transform: translateY(0px);
    }
}

.mic-button.is-listening {
    animation: pulse 1.5s infinite;
}

@keyframes pulse {
    0% {
        box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.7);
    }

    70% {
        box-shadow: 0 0 0 15px rgba(59, 130, 246, 0);
    }

    100% {
        box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);
    }
}

/* Animaci칩n para el carrito */
@keyframes cart-shake {

    10%,
    90% {
        transform: translate3d(-1px, 0, 0) scale(1.1);
    }

    20%,
    80% {
        transform: translate3d(2px, 0, 0) scale(1.1);
    }

    30%,
    50%,
    70% {
        transform: translate3d(-3px, 0, 0) scale(1.1);
    }

    40%,
    60% {
        transform: translate3d(3px, 0, 0) scale(1.1);
    }
}

.cart-animating {
    animation: cart-shake 0.8s cubic-bezier(.36, .07, .19, .97) both;
}

/* Transiciones de vista suaves */
#view-container {
    position: relative;
    overflow-x: hidden;
}

.view {
    width: 100%;
    transition: opacity 0.4s ease-in-out, transform 0.4s ease-in-out;
}

.view:not(.active) {
    opacity: 0;
    transform: translateY(1rem);
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none;
}

.view.active {
    opacity: 1;
    transform: translateY(0);
    position: relative;
}